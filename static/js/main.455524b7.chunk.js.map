{"version":3,"sources":["img/logo.svg","Components/Covid/ORKG_Nav.js","Components/ChartVisualization/googleDataWrapper.js","Components/ChartVisualization/tableChart.js","Components/ChartVisualization/exampleChartA.js","Components/ChartVisualization/exampleChartB.js","Components/ChartVisualization/exampleChartC.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","id","transform","d","fill","cx","cy","r","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","ORKG_Nav","style","display","flexFlow","justifyContent","alignItems","padding","className","href","rel","color","Component","DataForChart","header","rowls","addColumn","bind","getChartData","first","second","col","type","label","push","rowObject","valObject","v","toPush","c","cols","rows","TableChart","state","bodyOpacity","componentDidUpdate","prevProps","prevState","updateDimensions","getData","headerArray","tableData","unitArray","units","valueArray","values","console","log","transpose","forEach","row","addRow","m","map","x","window","addEventListener","removeEventListener","chartType","data","options","showRowNumber","chartObject","createChartObject","marginBottom","paddingLeft","bodyHeight","opacity","exampleChartA","y","valueSelector","reshapedValueArray","index","monthMap","January","February","March","April","May","June","July","August","September","October","November","December","indexInOrig","j","dataEntry","s_day","s_month","s_year","n_day","n_month","n_year","pointInTime","split","tokensTime","parseInt","asDate","Date","meanValue","thatValue","substring","parseFloat","exampleChartB","exampleChartC","role","i0Int","i1Int","labelStuff","toolTipStuff","q","interval","tokens","low","high","aToolTip","toISOString","interpolateNulls","lineWidth","intervals","dataOpacity","explorer","axis","keepInBounds","maxZoomIn","trendlines","0","visibleInLegend","labelInLegend","App","loadData","covidData","parseData","headersArray","unitsArray","AnchorHeader","TabularData","identifier","rowNode","anchorIdInValueArray","anchorReferenceId","anchorLabel","cell","metric","unit","value","headerIdInvVal","setState","hasTabularDataObject","haveTripleModel","haveVertexEdgeModel","haveNodeLinkModel","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.455524b7.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  id: \"logo\",\n  transform: \"translate(-24.806 -42.086)\"\n}, React.createElement(\"g\", {\n  id: \"Group_2\",\n  \"data-name\": \"Group 2\",\n  transform: \"translate(88.846 58.837)\"\n}, React.createElement(\"g\", {\n  id: \"Group_1\",\n  \"data-name\": \"Group 1\"\n}, React.createElement(\"path\", {\n  id: \"Path_1\",\n  \"data-name\": \"Path 1\",\n  d: \"M250.8,112.862c0-6.631,4.137-11.562,10.683-11.562s10.655,4.931,10.655,11.562-4.109,11.533-10.655,11.533C254.966,124.395,250.8,119.492,250.8,112.862Zm16.776,0c0-4.421-1.984-7.878-6.036-7.878s-6.149,3.457-6.149,7.878c0,4.392,2.069,7.849,6.121,7.849S267.576,117.254,267.576,112.862Z\",\n  transform: \"translate(-250.8 -101.272)\",\n  fill: \"#e86161\"\n}), React.createElement(\"path\", {\n  id: \"Path_2\",\n  \"data-name\": \"Path 2\",\n  d: \"M334.8,102.9h10.173c4.279,0,7.113,2.465,7.113,6.177a5.09,5.09,0,0,1-4.052,5.356v.085c2.04.6,3.089,1.757,3.372,4.449.312,3.117.2,5.526.963,5.866v.227h-4.307c-.567-.255-.623-2.72-.793-5.1-.2-2.409-1.559-3.769-4.336-3.769h-3.627v8.841H334.8Zm4.506,9.776h4.761c2.437,0,3.655-1.275,3.655-3.032,0-1.785-1.133-3.117-3.542-3.117h-4.9v6.149Z\",\n  transform: \"translate(-310.997 -102.418)\",\n  fill: \"#e86161\"\n}), React.createElement(\"path\", {\n  id: \"Path_3\",\n  \"data-name\": \"Path 3\",\n  d: \"M406,102.828h4.506v8.813l8.529-8.841h5.582l-8.7,8.869,9.238,13.29h-5.271l-7.113-10.343-2.267,2.3v8.048H406Z\",\n  transform: \"translate(-362.021 -102.347)\",\n  fill: \"#e86161\"\n}), React.createElement(\"path\", {\n  id: \"Path_4\",\n  \"data-name\": \"Path 4\",\n  d: \"M486.945,120.838h-.057a6.613,6.613,0,0,1-6.234,3.429,10.07,10.07,0,0,1-7.764-3.23,13.138,13.138,0,0,1,.737-17.286,10.151,10.151,0,0,1,7.113-2.55c5.582,0,8.756,3.06,9.493,7.4H485.84c-.482-2.125-2.125-3.684-4.987-3.684-4.194,0-6.262,3.457-6.262,7.878,0,4.534,2.38,7.849,6.206,7.849a5.426,5.426,0,0,0,5.7-5.016v-.113h-5.327v-3.457h9.323v11.76h-3.372Z\",\n  transform: \"translate(-407.885 -101.2)\",\n  fill: \"#e86161\"\n}))), React.createElement(\"g\", {\n  id: \"Group_7\",\n  \"data-name\": \"Group 7\",\n  transform: \"translate(24.806 42.086)\"\n}, React.createElement(\"path\", {\n  id: \"Path_5\",\n  \"data-name\": \"Path 5\",\n  d: \"M159.7,87.9v-.482c-.028-.17-.028-.312-.057-.482a4.838,4.838,0,0,0-1.955-3.259,6.688,6.688,0,0,0-1.615-.822,10.508,10.508,0,0,0-3.315-.453,19.427,19.427,0,0,0-3.174.34,31.081,31.081,0,0,0-5.979,1.842c1.02-.2,2.04-.4,3.06-.538s2.04-.255,3.06-.312a17.674,17.674,0,0,1,3,.057,9.54,9.54,0,0,1,2.749.68,3.358,3.358,0,0,1,1.757,1.587,3.747,3.747,0,0,1,.142,2.324,10.028,10.028,0,0,1-1.02,2.522,25.172,25.172,0,0,1-1.587,2.409c-.368.482-.737.935-1.133,1.389a5.269,5.269,0,0,1,2.154,2.012c.453-.567.878-1.162,1.275-1.757a25.84,25.84,0,0,0,1.644-2.862,12.356,12.356,0,0,0,1.02-3.287,2.436,2.436,0,0,0,.028-.453l.028-.227A.259.259,0,0,1,159.7,87.9Z\",\n  transform: \"translate(-109.937 -70.976)\",\n  fill: \"#e86161\"\n}), React.createElement(\"circle\", {\n  id: \"Ellipse_1\",\n  \"data-name\": \"Ellipse 1\",\n  cx: 3.769,\n  cy: 3.769,\n  r: 3.769,\n  transform: \"translate(37.488 24.629)\",\n  fill: \"#e86161\"\n}), React.createElement(\"g\", {\n  id: \"Group_3\",\n  \"data-name\": \"Group 3\",\n  transform: \"translate(0 24.402)\"\n}, React.createElement(\"path\", {\n  id: \"Path_6\",\n  \"data-name\": \"Path 6\",\n  d: \"M36.479,146.789a1.616,1.616,0,0,1,.028-.368c-.822.17-1.672.312-2.494.425-.482.057-.935.085-1.417.113-.453,0-.935,0-1.389-.028a6.147,6.147,0,0,1-2.409-.6,2.656,2.656,0,0,1-1.36-1.474,4.5,4.5,0,0,1,0-2.38,12.491,12.491,0,0,1,.992-2.635,19.6,19.6,0,0,1,1.53-2.55,40.5,40.5,0,0,1,3.826-4.732c1.389-1.5,2.862-2.947,4.392-4.364a48.629,48.629,0,0,0-5.072,3.627,36.836,36.836,0,0,0-4.534,4.392,29.052,29.052,0,0,0-1.927,2.579A13.588,13.588,0,0,0,25.2,141.83a8.785,8.785,0,0,0-.368,1.757,5.758,5.758,0,0,0,.142,1.955,4.66,4.66,0,0,0,.935,1.87,5.632,5.632,0,0,0,1.53,1.332,7.548,7.548,0,0,0,1.729.737,12.926,12.926,0,0,0,1.757.368,19.3,19.3,0,0,0,3.372.085,26.845,26.845,0,0,0,3.032-.368A4.613,4.613,0,0,1,36.479,146.789Z\",\n  transform: \"translate(-24.806 -128.2)\",\n  fill: \"#e86161\"\n}), React.createElement(\"path\", {\n  id: \"Path_7\",\n  \"data-name\": \"Path 7\",\n  d: \"M113.885,149.1c-.085.085-.2.142-.283.227-1.615,1.218-3.259,2.38-4.959,3.429-1.7,1.077-3.429,2.1-5.214,3.06-1.672.907-3.4,1.729-5.129,2.494a5.245,5.245,0,0,1,1.3,3.315q2.848-1.19,5.526-2.635c1.87-.992,3.684-2.1,5.441-3.23,1.757-1.162,3.485-2.409,5.129-3.74a4.932,4.932,0,0,0,.4-.34A5.071,5.071,0,0,1,113.885,149.1Z\",\n  transform: \"translate(-77.474 -143.178)\",\n  fill: \"#e86161\"\n})), React.createElement(\"circle\", {\n  id: \"Ellipse_2\",\n  \"data-name\": \"Ellipse 2\",\n  cx: 3.769,\n  cy: 3.769,\n  r: 3.769,\n  transform: \"translate(13.118 39.222)\",\n  fill: \"#c0c2cc\"\n}), React.createElement(\"path\", {\n  id: \"Path_8\",\n  \"data-name\": \"Path 8\",\n  d: \"M82.155,50.534a5.253,5.253,0,0,1,2.947.907c.255-.708.51-1.389.793-2.069a15.478,15.478,0,0,1,1.36-2.437c.142-.17.255-.368.4-.538l.2-.255.227-.227c.142-.17.312-.283.453-.425.085-.057.142-.113.227-.17a.994.994,0,0,1,.227-.142l.227-.142a1.952,1.952,0,0,0,.227-.085,1.166,1.166,0,0,1,.227-.085.876.876,0,0,1,.227-.057,2.355,2.355,0,0,1,.992.028,4.465,4.465,0,0,1,2.04,1.275c.34.312.623.68.935,1.02a12.566,12.566,0,0,1,.822,1.19A20.961,20.961,0,0,1,96.1,50.931,46.887,46.887,0,0,1,98.279,56.6c.6,1.955,1.105,3.939,1.559,5.979-.028-1.048-.113-2.069-.2-3.117-.113-1.02-.227-2.069-.4-3.089a38.578,38.578,0,0,0-1.5-6.121,26.568,26.568,0,0,0-1.247-2.975,13.29,13.29,0,0,0-1.842-2.805,8.952,8.952,0,0,0-1.3-1.218,5.908,5.908,0,0,0-1.729-.907,4.627,4.627,0,0,0-2.069-.227,3.194,3.194,0,0,0-.51.085,3.3,3.3,0,0,0-.51.113l-.482.17a3.383,3.383,0,0,0-.453.227,1.691,1.691,0,0,0-.425.255c-.142.085-.283.17-.4.255a7.509,7.509,0,0,0-.737.6l-.34.312-.312.34a6,6,0,0,0-.567.68,17.288,17.288,0,0,0-1.814,2.862A21.962,21.962,0,0,0,81.9,50.534Z\",\n  transform: \"translate(-65.721 -42.086)\",\n  fill: \"#bfc2cd\"\n}), React.createElement(\"g\", {\n  id: \"Group_4\",\n  \"data-name\": \"Group 4\",\n  transform: \"translate(13.251 18.253)\"\n}, React.createElement(\"path\", {\n  id: \"Path_9\",\n  \"data-name\": \"Path 9\",\n  d: \"M72.343,125.486c.057.425.142.822.2,1.247a5.163,5.163,0,0,1,2.635-.708,4.654,4.654,0,0,1,.652.057c-.057-.34-.085-.68-.142-1.02-.113-.992-.227-1.984-.312-3-.085-.992-.142-2.012-.17-3-.085-2.012-.085-4.024-.028-6.036.057-1.984.227-3.967.453-5.922a4.911,4.911,0,0,1-.907.085,5.3,5.3,0,0,1-2.579-.68v.085c-.283,2.1-.453,4.222-.538,6.319-.057,2.125-.057,4.222.057,6.319C71.833,121.292,72.031,123.417,72.343,125.486Z\",\n  transform: \"translate(-71.569 -106.5)\",\n  fill: \"#bfc2cd\"\n}), React.createElement(\"path\", {\n  id: \"Path_10\",\n  \"data-name\": \"Path 10\",\n  d: \"M98.5,201.767c-.227.453-.482.878-.737,1.3a11.749,11.749,0,0,1-.85,1.218,8.739,8.739,0,0,1-2.012,1.955,3.116,3.116,0,0,1-2.267.567c-.057,0-.085-.028-.142-.028l-.142-.028-.142-.028c-.057-.028-.085-.028-.142-.057a1.006,1.006,0,0,1-.255-.113l-.255-.142a4.9,4.9,0,0,1-.992-.765,10.937,10.937,0,0,1-1.644-2.21,20.058,20.058,0,0,1-1.247-2.607c-.142-.34-.255-.68-.4-1.02a4.945,4.945,0,0,1-2.777.85c.2.425.368.878.6,1.3a20.5,20.5,0,0,0,1.615,2.862,12.88,12.88,0,0,0,2.267,2.579,7.1,7.1,0,0,0,1.53.992,4.686,4.686,0,0,0,1.87.482A4.435,4.435,0,0,0,94.3,208.6a5.217,5.217,0,0,0,1.587-.935,8.034,8.034,0,0,0,1.19-1.218,14.483,14.483,0,0,0,.935-1.36,19.286,19.286,0,0,0,1.332-2.919,30.444,30.444,0,0,0,1.445-6.064A32.953,32.953,0,0,1,98.5,201.767Z\",\n  transform: \"translate(-80.836 -170.71)\",\n  fill: \"#bfc2cd\"\n})), React.createElement(\"g\", {\n  id: \"Group_6\",\n  \"data-name\": \"Group 6\",\n  transform: \"translate(0.253 10.754)\"\n}, React.createElement(\"path\", {\n  id: \"Path_11\",\n  \"data-name\": \"Path 11\",\n  d: \"M29.752,83.143a8.7,8.7,0,0,1,2.635-.425,16.458,16.458,0,0,1,2.862.227c.482.085.935.17,1.417.255v-.255a5.136,5.136,0,0,1,.708-2.607c-.6-.085-1.19-.17-1.785-.227a18.825,18.825,0,0,0-3.344,0,10.155,10.155,0,0,0-3.429.85A5.716,5.716,0,0,0,27.23,82.01,4.912,4.912,0,0,0,26.1,83.625a5.691,5.691,0,0,0-.4,1.9,7.335,7.335,0,0,0,.227,1.785,11.918,11.918,0,0,0,1.332,3.06,21.723,21.723,0,0,0,1.87,2.607,31.426,31.426,0,0,0,4.534,4.364c-.68-.793-1.332-1.587-1.955-2.409s-1.218-1.672-1.757-2.522a20.226,20.226,0,0,1-1.445-2.664A11.366,11.366,0,0,1,27.655,87a3.827,3.827,0,0,1,.312-2.437A3.358,3.358,0,0,1,29.752,83.143Z\",\n  transform: \"translate(-25.7 -80.036)\",\n  fill: \"#80869b\"\n}), React.createElement(\"g\", {\n  id: \"Group_5\",\n  \"data-name\": \"Group 5\",\n  transform: \"translate(20.204 3.078)\"\n}, React.createElement(\"path\", {\n  id: \"Path_12\",\n  \"data-name\": \"Path 12\",\n  d: \"M112.925,103.623a5.272,5.272,0,0,1,2.324-2.692c-1.587-1.275-3.259-2.494-4.959-3.627-1.785-1.162-3.6-2.267-5.469-3.287-1.87-.992-3.8-1.927-5.752-2.749-.283-.113-.6-.227-.878-.368A5.2,5.2,0,0,1,97,94.074c.227.113.482.2.708.312,1.842.822,3.655,1.757,5.412,2.749s3.514,2.04,5.186,3.145C109.893,101.328,111.424,102.433,112.925,103.623Z\",\n  transform: \"translate(-97 -90.9)\",\n  fill: \"#80869b\"\n}), React.createElement(\"path\", {\n  id: \"Path_13\",\n  \"data-name\": \"Path 13\",\n  d: \"M142.966,160.2a9.527,9.527,0,0,0-.765-3.542,17.7,17.7,0,0,0-1.559-3,24.411,24.411,0,0,0-1.842-2.55,5.329,5.329,0,0,1-2.409,2.267q.85.978,1.615,2.04a16.677,16.677,0,0,1,1.445,2.437,6.4,6.4,0,0,1,.708,2.437.95.95,0,0,1,0,.283v.283c0,.085-.028.17-.028.255l-.028.142-.028.113a2.006,2.006,0,0,1-.453.878,3.534,3.534,0,0,1-.85.708,4.922,4.922,0,0,1-.538.283,4.044,4.044,0,0,1-.623.227,4.381,4.381,0,0,1-.652.17c-.227.028-.453.085-.68.113a11.936,11.936,0,0,1-1.445.113,26.363,26.363,0,0,1-2.975-.113,39.958,39.958,0,0,1-6.007-1.105c-1.984-.51-3.967-1.133-5.951-1.814.907.51,1.814.992,2.749,1.474.935.453,1.9.878,2.862,1.275a37.3,37.3,0,0,0,6.036,1.9,20.265,20.265,0,0,0,3.2.453,10.973,10.973,0,0,0,1.672,0c.283,0,.567-.057.85-.057.283-.057.567-.085.878-.142a7.44,7.44,0,0,0,1.757-.567,5.688,5.688,0,0,0,1.615-1.162,5.1,5.1,0,0,0,1.105-1.785l.085-.255.057-.255c.028-.17.085-.34.113-.51l.057-.51A1.342,1.342,0,0,0,142.966,160.2Z\",\n  transform: \"translate(-113.411 -134.041)\",\n  fill: \"#80869b\"\n}))), React.createElement(\"circle\", {\n  id: \"Ellipse_3\",\n  \"data-name\": \"Ellipse 3\",\n  cx: 3.769,\n  cy: 3.769,\n  r: 3.769,\n  transform: \"translate(12.665 9.894)\",\n  fill: \"#80869b\"\n})));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 146.642,\n    height: 56.438,\n    viewBox: \"0 0 146.642 56.438\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.7d352eef.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from \"react\";\nimport { ReactComponent as Logo } from \"../../img/logo.svg\";\n\nclass ORKG_Nav extends Component {\n\n  /** Component Rendering Function **/\n  render() {\n    return (\n      // <StyledLink to=\"https://www.orkg.org/orkg/\" className=\"mr-4 p-0\">\n      <div\n        style={{\n          display: \"flex\",\n          flexFlow: \"row nowrap\",\n          justifyContent: \"flex-start\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <div style={{ padding: \"10px\" }}>\n            <a\n              className=\"mr-4 pt-4 mt-4 ml-4\"\n              href=\"https://www.orkg.org/orkg/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Logo />\n            </a>\n            Reproductive number estimates 2019-nCoV (\n            <a\n              style={{ color: \"#e86161\" }}\n              href=\"https://www.orkg.org/orkg/comparison/R12251\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              ORKG comparison\n            </a>\n            ) Reference Paper :\n            <a\n              style={{ color: \"#e86161\" }}\n              href=\"https://doi.org/10.1093/jtm/taaa021\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              https://doi.org/10.1093/jtm/taaa021\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ORKG_Nav;\n","export default class DataForChart {\n    constructor() {\n        this.header = [];\n        this.rowls = [];\n\n        this.addColumn = this.addColumn.bind(this);\n        this.getChartData = this.getChartData.bind(this);\n    }\n\n    addColumn() {\n        // console.log('Want to add new col!');\n        // console.log(arguments);\n\n        if (arguments.length === 2) {\n            const first = arguments[0];\n            const second = arguments[1];\n\n            // console.log(first + ' ' + second);\n            const col = { type: first, label: second };\n            this.header.push(col);\n        }\n        if (arguments.length === 1) {\n            this.header.push(arguments[0]);\n        }\n    }\n\n    addRow() {\n        const rowObject = [];\n        for (let i = 0; i < arguments.length; i++) {\n            const valObject = { v: arguments[i] };\n            rowObject.push(valObject);\n        }\n        const toPush = { c: rowObject };\n        this.rowls.push(toPush);\n    }\n\n    getChartData() {\n        return {\n            cols: this.header,\n            rows: this.rowls\n        };\n    }\n}\n","import React, { Component } from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport \"./visWidgetConfig.css\";\n// import { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\n// import { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { Chart } from \"react-google-charts\";\n\nimport DataForChart from \"./googleDataWrapper\";\nclass TableChart extends Component {\n  constructor(props) {\n    super(props);\n    this.tableData = props.tableData;\n  }\n\n  state = {\n    bodyOpacity: 1.0\n  };\n\n  componentDidMount() {\n    // console.log('GizMOGraph component did mount ');\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {};\n  // if (prevProps.tableData!==this.props.tableData)\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  updateDimensions = () => {\n    // const parentDiv = document.getElementById('configWidget');\n    // const height = parentDiv.getBoundingClientRect().height;\n    // const offset = 40;\n    // this.setState({ bodyHeight: height - offset });\n  };\n\n  getData = () => {\n    // console.log(' do we have TableData? ' + !!this.tableData);\n    // console.log(this.tableData);\n    // // make the wrapper for google data thingy;\n\n    // reorganize the data;\n    const headerArray = this.tableData.header;\n    const unitArray = this.tableData.units;\n    let valueArray = this.tableData.values;\n\n    // valueArray = this.transpose(valueArray); // need it for iterating for the googleWrapper\n    // console.log(valueArray);\n    \n    console.log(headerArray);\n    console.log(unitArray);\n    \n\n    // now we can easyly generate the table data for the char api;\n    const tableData = new DataForChart();\n\n    // do this using the semantics of the units;\n    for (let i = 0; i < headerArray.length; i++) {\n      if (unitArray[i] === \"<<ANCHOR>>\") {\n        tableData.addColumn(\"string\", headerArray[i]);\n      }\n\n      if (unitArray[i] === \"LocationName\") {\n        tableData.addColumn(\"string\", headerArray[i]);\n      }\n\n      // using strings for now;\n      if (unitArray[i] === \"Date\") {\n        tableData.addColumn(\"string\", headerArray[i]);\n      }\n      if (unitArray[i] === \"Description\") {\n        tableData.addColumn(\"string\", headerArray[i]);\n      }\n\n      if (unitArray[i] === \"Numerical Range\") {\n        tableData.addColumn(\"string\", headerArray[i]);\n      }\n      if (unitArray[i] === \"Number\") {\n        tableData.addColumn(\"string\", headerArray[i]);\n      }\n    }\n\n    // headerArray.forEach(item => {\n    //   if (item === \"Method\") {\n    //     tableData.addColumn(\"string\", item);\n    //   } else {\n    //     // hard set for duration\n    //     if (item === \"Duration\") {\n    //       console.log(\"WE have found the Duration Entry! \");\n    //       tableData.addColumn(\"string\", item);\n    //     } else {\n    //       tableData.addColumn(\"number\", item);\n    //     }\n    //   }\n    // });\n\n    valueArray = this.transpose(valueArray);\n\n    valueArray.forEach(row => {\n      console.log(row);\n      tableData.addRow(...row);\n    });\n\n    // console.log(tableData.getChartData());\n    return tableData.getChartData();\n  };\n\n  transpose = m => m[0].map((x, i) => m.map(x => x[i]));\n\n  createChartObject() {\n    return (\n      <Chart\n        chartType=\"Table\"\n        data={this.getData()}\n        width=\"100%\"\n        height=\"100%\"\n        options={{ showRowNumber: true }}\n      />\n    );\n  }\n\n  /** Component Rendering Function **/\n  render() {\n    const chartObject = this.createChartObject();\n    return (\n      <div\n        id=\"chartWidget\"\n        style={{ width: \"95%\", height: \"30%\", marginBottom: \"30px\",paddingLeft:\"2.5%\" }}\n      >\n        <div id=\"chartWidgetHeader\" className={\"headerStyle\"}>\n          Table View\n        </div>\n        <div\n          id=\"chartWidgetBody\"\n          className={\"bodyStyle\"}\n          style={{\n            height: this.state.bodyHeight,\n            opacity: this.state.bodyOpacity\n          }}\n        >\n          {chartObject}\n        </div>\n      </div>\n    );\n  }\n}\nTableChart.propTypes = {\n  tableData: PropTypes.any.isRequired\n};\nexport default TableChart;\n","import React, { Component } from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport \"./visWidgetConfig.css\";\n// import { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\n// import { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { Chart } from \"react-google-charts\";\n\nimport DataForChart from \"./googleDataWrapper\";\nclass exampleChartA extends Component {\n  constructor(props) {\n    super(props);\n    this.tableData = props.tableData;\n  }\n\n  state = {\n    bodyOpacity: 1.0\n  };\n\n  componentDidMount() {\n    // console.log('GizMOGraph component did mount ');\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {};\n  // if (prevProps.tableData!==this.props.tableData)\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  updateDimensions = () => {\n    // const parentDiv = document.getElementById('configWidget');\n    // const height = parentDiv.getBoundingClientRect().height;\n    // const offset = 40;\n    // this.setState({ bodyHeight: height - offset });\n  };\n\n  getData = () => {\n    // console.log(' do we have TableData? ' + !!this.tableData);\n    // console.log(this.tableData);\n    // // make the wrapper for google data thingy;\n\n    // reorganize the data;\n    const headerArray = this.tableData.header;\n    const unitArray = this.tableData.units;\n    const valueArray = [];\n\n    // deepCopy;\n    for (let x = 0; x < this.tableData.values.length; x++) {\n      valueArray[x] = [];\n      for (let y = 0; y < this.tableData.values[x].length; y++) {\n        valueArray[x][y] = this.tableData.values[x][y];\n      }\n    }\n\n    // valueArray = this.transpose(valueArray); // need it for iterating for the googleWrapper\n    // console.log(valueArray);\n\n    console.log(headerArray);\n    console.log(unitArray);\n\n    // create index selectors;\n    const valueSelector = [2, 5];\n\n    // reshape the value array;\n\n    let reshapedValueArray = [];\n    valueSelector.forEach(index => {\n      reshapedValueArray.push(valueArray[index]);\n      console.log(\"Its unit is \" + unitArray[index]);\n    });\n\n    console.log(reshapedValueArray);\n\n    // now we can easyly generate the table data for the char api;\n    const tableData = new DataForChart();\n\n    tableData.addColumn(\"date\", \"Study date\");\n    tableData.addColumn(\"number\", \"R0 Estimate\");\n\n    // do this using the semantics of the units;\n    // for (let i = 0; i < headerArray.length; i++) {\n    //   if (unitArray[i] === \"<<ANCHOR>>\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   if (unitArray[i] === \"LocationName\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   // using strings for now;\n    //   if (unitArray[i] === \"Date\") {\n    //     tableData.addColumn(\"date\", headerArray[i]);\n    //   }\n    //   if (unitArray[i] === \"Description\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   if (unitArray[i] === \"Numerical Range\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //   if (unitArray[i] === \"Number\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    // }\n\n    // headerArray.forEach(item => {\n    //   if (item === \"Method\") {\n    //     tableData.addColumn(\"string\", item);\n    //   } else {\n    //     // hard set for duration\n    //     if (item === \"Duration\") {\n    //       console.log(\"WE have found the Duration Entry! \");\n    //       tableData.addColumn(\"string\", item);\n    //     } else {\n    //       tableData.addColumn(\"number\", item);\n    //     }\n    //   }\n    // });\n\n    // process the valueArray for the correct unit alignment;\n\n    const monthMap = {\n      January: 0,\n      February: 1,\n      March: 2,\n      April: 3,\n      May: 4,\n      June: 5,\n      July: 6,\n      August: 7,\n      September: 8,\n      October: 9,\n      November: 10,\n      December: 11\n    };\n\n    for (let i = 0; i < reshapedValueArray.length; i++) {\n      const indexInOrig = valueSelector[i];\n      if (unitArray[indexInOrig] === \"Date\") {\n        // transform it to date;\n        for (let j = 0; j < reshapedValueArray[i].length; j++) {\n          // fetch the value;\n\n          const dataEntry = reshapedValueArray[i][j];\n          let s_day, s_month, s_year;\n          let n_day, n_month, n_year;\n\n          if (dataEntry.indexOf(\"--\") !== -1) {\n            // this is the stupid thing;\n            const tokens = dataEntry.split(\" -- \");\n            const pointInTime = tokens[1];\n            console.log(pointInTime);\n\n            const tokensTime = pointInTime.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          } else if (dataEntry.indexOf(\"and\") !== -1) {\n            // this is the stupid thing;\n            const tokens = dataEntry.split(\" and \");\n            const pointInTime = tokens[1];\n            console.log(pointInTime);\n\n            const tokensTime = pointInTime.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          } else {\n            const tokensTime = dataEntry.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          }\n          //console.log(n_day, +\" \" + n_month + \" \" + n_year);\n          // create data;\n          const asDate = new Date(n_year, n_month, n_day);\n          reshapedValueArray[i][j] = asDate;\n        }\n      }\n      if (unitArray[indexInOrig] === \"Number\") {\n        for (let j = 0; j < reshapedValueArray[i].length; j++) {\n          if (reshapedValueArray[i][j].indexOf(\"--\") !== -1) {\n            // split it\n            const meanValue = reshapedValueArray[i][j]\n              .split(\" -- \")[1]\n              .split(\" \")[1];\n            // remove the ()\n            const thatValue = meanValue.substring(1, meanValue.length - 1);\n            reshapedValueArray[i][j] = parseFloat(thatValue);\n          } else {\n            reshapedValueArray[i][j] = parseFloat(reshapedValueArray[i][j]);\n          }\n          console.log(reshapedValueArray[i][j]);\n        }\n      }\n    }\n\n    reshapedValueArray = this.transpose(reshapedValueArray);\n    // process the timeline stuff;\n\n    reshapedValueArray.forEach(row => {\n      console.log(row);\n      tableData.addRow(...row);\n    });\n\n    console.log(this.tableData.values);\n    return tableData.getChartData();\n  };\n\n  transpose = m => m[0].map((x, i) => m.map(x => x[i]));\n\n  createChartObject() {\n    return (\n      <Chart\n        chartType=\"ScatterChart\"\n        data={this.getData()}\n        width=\"100%\"\n        height=\"100%\"\n        options={{ showRowNumber: true }}\n      />\n    );\n  }\n\n  /** Component Rendering Function **/\n  render() {\n    const chartObject = this.createChartObject();\n    return (\n      <div\n        id=\"chartWidget\"\n        style={{\n          width: \"94%\",\n          height: \"600px\",\n          marginBottom: \"30px\",\n          paddingLeft: \"2.5%\"\n        }}\n      >\n        <div id=\"chartWidgetHeader\" className={\"headerStyle\"}>\n          Scatter Plot\n        </div>\n        <div\n          id=\"chartWidgetBody\"\n          className={\"bodyStyle\"}\n          style={{\n            height: this.state.bodyHeight,\n            opacity: this.state.bodyOpacity\n          }}\n        >\n          {chartObject}\n        </div>\n      </div>\n    );\n  }\n}\nexampleChartA.propTypes = {\n  tableData: PropTypes.any.isRequired\n};\nexport default exampleChartA;\n","import React, { Component } from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport \"./visWidgetConfig.css\";\n// import { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\n// import { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { Chart } from \"react-google-charts\";\n\nimport DataForChart from \"./googleDataWrapper\";\nclass exampleChartB extends Component {\n  constructor(props) {\n    super(props);\n    this.tableData = props.tableData;\n  }\n\n  state = {\n    bodyOpacity: 1.0\n  };\n\n  componentDidMount() {\n    // console.log('GizMOGraph component did mount ');\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {};\n  // if (prevProps.tableData!==this.props.tableData)\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  updateDimensions = () => {\n    // const parentDiv = document.getElementById('configWidget');\n    // const height = parentDiv.getBoundingClientRect().height;\n    // const offset = 40;\n    // this.setState({ bodyHeight: height - offset });\n  };\n\n  getData = () => {\n    // console.log(' do we have TableData? ' + !!this.tableData);\n    // console.log(this.tableData);\n    // // make the wrapper for google data thingy;\n\n    // reorganize the data;\n    const headerArray = this.tableData.header;\n    const unitArray = this.tableData.units;\n    const valueArray = [];\n    // deepCopy;\n    for (let x = 0; x < this.tableData.values.length; x++) {\n      valueArray[x] = [];\n      for (let y = 0; y < this.tableData.values[x].length; y++) {\n        valueArray[x][y] = this.tableData.values[x][y];\n      }\n    }\n\n    // valueArray = this.transpose(valueArray); // need it for iterating for the googleWrapper\n    // console.log(valueArray);\n\n    console.log(headerArray);\n    console.log(unitArray);\n\n    console.log(\">>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<,\");\n\n    // create index selectors;\n    const valueSelector = [0, 5];\n\n    // reshape the value array;\n\n    let reshapedValueArray = [];\n    valueSelector.forEach(index => {\n      reshapedValueArray.push(valueArray[index]);\n      console.log(\"Its unit is \" + unitArray[index]);\n    });\n\n    console.log(reshapedValueArray);\n\n    // now we can easyly generate the table data for the char api;\n    const tableData = new DataForChart();\n\n    tableData.addColumn(\"string\", \"Publication\");\n    tableData.addColumn(\"number\", \"R0 Estimate\");\n\n    // do this using the semantics of the units;\n    // for (let i = 0; i < headerArray.length; i++) {\n    //   if (unitArray[i] === \"<<ANCHOR>>\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   if (unitArray[i] === \"LocationName\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   // using strings for now;\n    //   if (unitArray[i] === \"Date\") {\n    //     tableData.addColumn(\"date\", headerArray[i]);\n    //   }\n    //   if (unitArray[i] === \"Description\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   if (unitArray[i] === \"Numerical Range\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //   if (unitArray[i] === \"Number\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    // }\n\n    // headerArray.forEach(item => {\n    //   if (item === \"Method\") {\n    //     tableData.addColumn(\"string\", item);\n    //   } else {\n    //     // hard set for duration\n    //     if (item === \"Duration\") {\n    //       console.log(\"WE have found the Duration Entry! \");\n    //       tableData.addColumn(\"string\", item);\n    //     } else {\n    //       tableData.addColumn(\"number\", item);\n    //     }\n    //   }\n    // });\n\n    // process the valueArray for the correct unit alignment;\n\n    const monthMap = {\n      January: 0,\n      February: 1,\n      March: 2,\n      April: 3,\n      May: 4,\n      June: 5,\n      July: 6,\n      August: 7,\n      September: 8,\n      October: 9,\n      November: 10,\n      December: 11\n    };\n\n    for (let i = 0; i < reshapedValueArray.length; i++) {\n      const indexInOrig = valueSelector[i];\n      if (unitArray[indexInOrig] === \"Date\") {\n        // transform it to date;\n        for (let j = 0; j < reshapedValueArray[i].length; j++) {\n          // fetch the value;\n\n          const dataEntry = reshapedValueArray[i][j];\n          let s_day, s_month, s_year;\n          let n_day, n_month, n_year;\n\n          if (dataEntry.indexOf(\"--\") !== -1) {\n            // this is the stupid thing;\n            const tokens = dataEntry.split(\" -- \");\n            const pointInTime = tokens[1];\n            console.log(pointInTime);\n\n            const tokensTime = pointInTime.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          } else if (dataEntry.indexOf(\"and\") !== -1) {\n            // this is the stupid thing;\n            const tokens = dataEntry.split(\" and \");\n            const pointInTime = tokens[1];\n            console.log(pointInTime);\n\n            const tokensTime = pointInTime.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          } else {\n            const tokensTime = dataEntry.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          }\n          //console.log(n_day, +\" \" + n_month + \" \" + n_year);\n          // create data;\n          const asDate = new Date(n_year, n_month, n_day);\n          reshapedValueArray[i][j] = asDate;\n        }\n      }\n      if (unitArray[indexInOrig] === \"Number\") {\n        for (let j = 0; j < reshapedValueArray[i].length; j++) {\n          if (reshapedValueArray[i][j].indexOf(\"--\") !== -1) {\n            // split it\n            const meanValue = reshapedValueArray[i][j]\n              .split(\" -- \")[1]\n              .split(\" \")[1];\n            // remove the ()\n            const thatValue = meanValue.substring(1, meanValue.length - 1);\n            reshapedValueArray[i][j] = parseFloat(thatValue);\n          } else {\n            reshapedValueArray[i][j] = parseFloat(reshapedValueArray[i][j]);\n          }\n          console.log(reshapedValueArray[i][j]);\n        }\n      }\n      if (unitArray[indexInOrig] === \"<<ANCHOR>>\") {\n      }\n    }\n\n    reshapedValueArray = this.transpose(reshapedValueArray);\n    // process the timeline stuff;\n\n    reshapedValueArray.forEach(row => {\n      console.log(row);\n      tableData.addRow(...row);\n    });\n\n    // console.log(tableData.getChartData());\n    return tableData.getChartData();\n  };\n\n  transpose = m => m[0].map((x, i) => m.map(x => x[i]));\n\n  createChartObject() {\n    return (\n      <Chart\n        chartType=\"ColumnChart\"\n        data={this.getData()}\n        width=\"100%\"\n        height=\"100%\"\n        options={{ showRowNumber: true }}\n      />\n    );\n  }\n\n  /** Component Rendering Function **/\n  render() {\n    const chartObject = this.createChartObject();\n    return (\n      <div\n        id=\"chartWidget\"\n        style={{\n          width: \"94%\",\n          height: \"600px\",\n          marginBottom: \"30px\",\n          paddingLeft: \"2.5%\"\n        }}\n      >\n        <div id=\"chartWidgetHeader\" className={\"headerStyle\"}>\n          Bar Chart\n        </div>\n        <div\n          id=\"chartWidgetBody\"\n          className={\"bodyStyle\"}\n          style={{\n            height: this.state.bodyHeight,\n            opacity: this.state.bodyOpacity\n          }}\n        >\n          {chartObject}\n        </div>\n      </div>\n    );\n  }\n}\nexampleChartB.propTypes = {\n  tableData: PropTypes.any.isRequired\n};\nexport default exampleChartB;\n","import React, { Component } from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport \"./visWidgetConfig.css\";\n// import { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\n// import { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport { Chart } from \"react-google-charts\";\n\nimport DataForChart from \"./googleDataWrapper\";\nclass exampleChartC extends Component {\n  constructor(props) {\n    super(props);\n    this.tableData = props.tableData;\n  }\n\n  state = {\n    bodyOpacity: 1.0\n  };\n\n  componentDidMount() {\n    // console.log('GizMOGraph component did mount ');\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {};\n  // if (prevProps.tableData!==this.props.tableData)\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  updateDimensions = () => {\n    // const parentDiv = document.getElementById('configWidget');\n    // const height = parentDiv.getBoundingClientRect().height;\n    // const offset = 40;\n    // this.setState({ bodyHeight: height - offset });\n  };\n\n  getData = () => {\n    // console.log(' do we have TableData? ' + !!this.tableData);\n    // console.log(this.tableData);\n    // // make the wrapper for google data thingy;\n\n    // reorganize the data;\n    const headerArray = this.tableData.header;\n    const unitArray = this.tableData.units;\n    const valueArray = [];\n    // deepCopy;\n    for (let x = 0; x < this.tableData.values.length; x++) {\n      valueArray[x] = [];\n      for (let y = 0; y < this.tableData.values[x].length; y++) {\n        valueArray[x][y] = this.tableData.values[x][y];\n      }\n    }\n\n    // valueArray = this.transpose(valueArray); // need it for iterating for the googleWrapper\n    // console.log(valueArray);\n\n    console.log(headerArray);\n    console.log(unitArray);\n\n    console.log(\">>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<,\");\n\n    // create index selectors;\n    const valueSelector = [2, 5];\n\n    // reshape the value array;\n\n    let reshapedValueArray = [];\n    valueSelector.forEach(index => {\n      reshapedValueArray.push(valueArray[index]);\n      console.log(\"Its unit is \" + unitArray[index]);\n    });\n\n    console.log(reshapedValueArray);\n\n    // now we can easyly generate the table data for the char api;\n    const tableData = new DataForChart();\n\n    tableData.addColumn(\"date\", \"Study Date\");\n\n    tableData.addColumn(\"number\", \"R0 Estimate\");\n    // tableData.addColumn(\"number\", \"95% Confidence Interval\");\n    tableData.addColumn({ id: \"i0\", type: \"number\", role: \"interval\" });\n    tableData.addColumn({ id: \"i1\", type: \"number\", role: \"interval\" });\n    tableData.addColumn({ id: \"i3\", type: \"string\", role: \"tooltip\" });\n    tableData.addColumn(\"number\", \"95% Confidence Interval\");\n\n    // do this using the semantics of the units;\n    // for (let i = 0; i < headerArray.length; i++) {\n    //   if (unitArray[i] === \"<<ANCHOR>>\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   if (unitArray[i] === \"LocationName\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   // using strings for now;\n    //   if (unitArray[i] === \"Date\") {\n    //     tableData.addColumn(\"date\", headerArray[i]);\n    //   }\n    //   if (unitArray[i] === \"Description\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //\n    //   if (unitArray[i] === \"Numerical Range\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    //   if (unitArray[i] === \"Number\") {\n    //     tableData.addColumn(\"string\", headerArray[i]);\n    //   }\n    // }\n\n    // headerArray.forEach(item => {\n    //   if (item === \"Method\") {\n    //     tableData.addColumn(\"string\", item);\n    //   } else {\n    //     // hard set for duration\n    //     if (item === \"Duration\") {\n    //       console.log(\"WE have found the Duration Entry! \");\n    //       tableData.addColumn(\"string\", item);\n    //     } else {\n    //       tableData.addColumn(\"number\", item);\n    //     }\n    //   }\n    // });\n\n    // process the valueArray for the correct unit alignment;\n\n    const monthMap = {\n      January: 0,\n      February: 1,\n      March: 2,\n      April: 3,\n      May: 4,\n      June: 5,\n      July: 6,\n      August: 7,\n      September: 8,\n      October: 9,\n      November: 10,\n      December: 11\n    };\n\n    for (let i = 0; i < reshapedValueArray.length; i++) {\n      const indexInOrig = valueSelector[i];\n      if (unitArray[indexInOrig] === \"Date\") {\n        // transform it to date;\n        for (let j = 0; j < reshapedValueArray[i].length; j++) {\n          // fetch the value;\n\n          const dataEntry = reshapedValueArray[i][j];\n          let s_day, s_month, s_year;\n          let n_day, n_month, n_year;\n\n          if (dataEntry.indexOf(\"--\") !== -1) {\n            // this is the stupid thing;\n            const tokens = dataEntry.split(\" -- \");\n            const pointInTime = tokens[1];\n            console.log(pointInTime);\n\n            const tokensTime = pointInTime.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          } else if (dataEntry.indexOf(\"and\") !== -1) {\n            // this is the stupid thing;\n            const tokens = dataEntry.split(\" and \");\n            const pointInTime = tokens[1];\n            console.log(pointInTime);\n\n            const tokensTime = pointInTime.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          } else {\n            const tokensTime = dataEntry.split(\" \");\n            s_day = tokensTime[0];\n            s_month = tokensTime[1];\n            s_year = tokensTime[2];\n\n            n_day = parseInt(s_day);\n            n_month = parseInt(monthMap[s_month]);\n            n_year = parseInt(s_year);\n          }\n          //console.log(n_day, +\" \" + n_month + \" \" + n_year);\n          // create data;\n          const asDate = new Date(n_year, n_month, n_day);\n          reshapedValueArray[i][j] = asDate;\n        }\n      }\n      if (unitArray[indexInOrig] === \"Number\") {\n        for (let j = 0; j < reshapedValueArray[i].length; j++) {\n          if (reshapedValueArray[i][j].indexOf(\"--\") !== -1) {\n            // split it\n            const meanValue = reshapedValueArray[i][j]\n              .split(\" -- \")[1]\n              .split(\" \")[1];\n            // remove the ()\n            const thatValue = meanValue.substring(1, meanValue.length - 1);\n            reshapedValueArray[i][j] = parseFloat(thatValue);\n          } else {\n            reshapedValueArray[i][j] = parseFloat(reshapedValueArray[i][j]);\n          }\n          console.log(reshapedValueArray[i][j]);\n        }\n      }\n      if (unitArray[indexInOrig] === \"<<ANCHOR>>\") {\n      }\n    }\n\n    // reshapedValueArray.push(reshapedValueArray[1])\n    //\n\n    // inteval? vis?\n    const i0Int = [];\n    const i1Int = [];\n    const labelStuff = [];\n    const toolTipStuff = [];\n\n    for (let q = 0; q < valueArray[6].length; q++) {\n      // extract the interval;\n      labelStuff.push(null);\n      const interval = valueArray[6][q];\n      console.log(\" InterVal = \" + interval);\n\n      if (interval !== \"NULL\") {\n        const tokens = interval.split(\" -- \");\n        const low = parseFloat(tokens[0]);\n        const high = parseFloat(tokens[1]);\n\n        i0Int.push(low);\n        i1Int.push(high);\n        console.log(\" LOW :\" + low + \"  <> HIGHT\" + high);\n      } else {\n        i0Int.push(null);\n        i1Int.push(null);\n        // i0Int.push(reshapedValueArray[1][q]);\n        // i1Int.push(reshapedValueArray[1][q]);\n      }\n\n      let aToolTip =\n        \"Study Date \" + reshapedValueArray[0][q].toISOString().split(\"T\")[0];\n      aToolTip += \"\\nR0 Estimate: \" + reshapedValueArray[1][q];\n      aToolTip += \"\\n95% CI :[ \" + i0Int[q] + \", \" + i1Int[q] + \"]\";\n      toolTipStuff.push(aToolTip);\n\n      console.log(aToolTip);\n    }\n\n    reshapedValueArray.push(i0Int);\n    reshapedValueArray.push(i1Int);\n    reshapedValueArray.push(toolTipStuff);\n    reshapedValueArray.push(labelStuff);\n\n    reshapedValueArray = this.transpose(reshapedValueArray);\n\n    // process the timeline stuff;\n\n    reshapedValueArray.forEach(row => {\n      tableData.addRow(...row);\n    });\n\n    // console.log(tableData.getChartData());\n    return tableData.getChartData();\n  };\n\n  transpose = m => m[0].map((x, i) => m.map(x => x[i]));\n\n  createChartObject() {\n    const options_lines = {\n      // title: \"Line intervals, default\",\n      interpolateNulls: true,\n      lineWidth: 0,\n      // intervals: { style: \"line\" }\n      intervals: { style: \"boxes\", color: \"red\" },\n      opacity: 0.1,\n\n      dataOpacity: 0.4,\n      explorer: {\n        axis: \"horizontal vertical\",\n        //    actions: [\"dragToZoom\", \"rightClickToReset\"],\n        keepInBounds: true,\n        maxZoomIn: 0.01\n      },\n      trendlines: {\n        0: {\n          type: \"polynomial\",\n          color: \"green\",\n          lineWidth: 3,\n          opacity: 0.5,\n\n          visibleInLegend: true,\n          labelInLegend: \"Trend line \\n(Just a test)\"\n        }\n      }\n    };\n\n    return (\n      <Chart\n        chartType=\"ScatterChart\"\n        data={this.getData()}\n        width=\"100%\"\n        height=\"100%\"\n        options={options_lines}\n      />\n    );\n  }\n\n  /** Component Rendering Function **/\n  render() {\n    const chartObject = this.createChartObject();\n    return (\n      <div\n        id=\"chartWidget\"\n        style={{\n          width: \"94%\",\n          height: \"600px\",\n          marginBottom: \"30px\",\n          paddingLeft: \"2.5%\"\n        }}\n      >\n        <div id=\"chartWidgetHeader\" className={\"headerStyle\"}>\n          Combo Chart\n        </div>\n        <div\n          id=\"chartWidgetBody\"\n          className={\"bodyStyle\"}\n          style={{\n            height: this.state.bodyHeight,\n            opacity: this.state.bodyOpacity\n          }}\n        >\n          {chartObject}\n        </div>\n      </div>\n    );\n  }\n}\nexampleChartC.propTypes = {\n  tableData: PropTypes.any.isRequired\n};\nexport default exampleChartC;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport ORKGNav from \"./Components/Covid/ORKG_Nav\";\nimport covidData from \"./covid19.json\";\nimport TableChart from \"./Components/ChartVisualization/tableChart\";\nimport ExampleChartA from \"./Components/ChartVisualization/exampleChartA\";\nimport ExampleChartB from \"./Components/ChartVisualization/exampleChartB\";\nimport ExampleChartC from \"./Components/ChartVisualization/exampleChartC\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      haveTripleModel: false,\n      haveVertexEdgeModel: false,\n      haveNodeLinkModel: false,\n      hasTabularDataObject: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = () => {\n    console.log(\"want to load the json data\");\n    console.log(covidData);\n    this.parseData(covidData);\n  };\n\n  parseData = data => {\n    const headersArray = [];\n    const valueArray = [];\n    const unitsArray = [];\n\n    headersArray.push(data.AnchorHeader);\n    unitsArray.push(\"<<ANCHOR>>\");\n\n    const rowIdentifier = data.TabularData;\n    rowIdentifier.forEach(identifier => {\n      console.log(identifier);\n      if (data.hasOwnProperty(identifier)) {\n        const rowNode = data[identifier];\n        const anchorIdInValueArray = headersArray.indexOf(data.AnchorHeader);\n        if (!valueArray[anchorIdInValueArray]) {\n          valueArray[anchorIdInValueArray] = [];\n        }\n        if (rowNode.anchorReferenceId > 0) {\n          valueArray[anchorIdInValueArray].push(\n            rowNode.anchorLabel + \" [\" + rowNode.anchorReferenceId + \"]\"\n          );\n        } else {\n          valueArray[anchorIdInValueArray].push(rowNode.anchorLabel);\n        }\n\n        // go through the cellNodes and create headers;\n        const cellNodes = rowNode[\"cellNodes\"];\n        cellNodes.forEach(cell => {\n          const metric = cell[\"metric\"];\n          const unit = cell[\"unit\"];\n          const value = cell[\"value\"];\n          if (headersArray.indexOf(metric) === -1) {\n            headersArray.push(metric);\n          }\n          // headerID;\n          const headerIdInvVal = headersArray.indexOf(metric);\n          if (!valueArray[headerIdInvVal]) {\n            valueArray[headerIdInvVal] = [];\n          }\n\n          // add values there;\n          valueArray[headerIdInvVal].push(value);\n          if (!unitsArray[headerIdInvVal]) {\n            unitsArray[headerIdInvVal] = unit;\n          }\n        });\n      }\n    });\n\n    // for each rowNode in tabular data\n\n    // reconstruct table;\n    // save vars so we can use them in the function;\n    this.headerArray = headersArray;\n    this.unitArray = unitsArray;\n    this.valueArray = valueArray;\n\n    this.tableData = {\n      header: this.headerArray,\n      units: this.unitArray,\n      values: this.valueArray\n    };\n    this.setState({ hasTabularDataObject: true });\n  };\n\n  render() {\n    return (\n      <>\n        <ORKGNav />\n        {this.state.hasTabularDataObject && (\n          <>\n            <TableChart tableData={this.tableData} />\n            <ExampleChartA tableData={this.tableData} />\n            <ExampleChartB tableData={this.tableData} />\n            <ExampleChartC tableData={this.tableData} />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}